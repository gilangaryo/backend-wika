swagger: '2.0'
info:
  version: '1.0.0'
  title: 'WIKA API'
paths:
  /api/user:
    get:
      summary: 'Fetch all users'
      description: 'Retrieve a list of all users in the system.'
      responses:
        200:
          description: 'A list of users'
          schema:
            type: array
            items:
              $ref: '#/definitions/User'
    post:
      summary: 'Create a new user'
      description: 'Add a new user to the system.'
      parameters:
        - name: body
          in: body
          description: 'User object to be added'
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        201:
          description: 'User successfully created'
          schema:
            $ref: '#/definitions/User'

  /api/user/{id}:
    get:
      summary: 'Fetch user by ID'
      description: 'Retrieve a specific user by their unique ID.'
      parameters:
        - name: id
          in: path
          required: true
          description: 'The ID of the user to retrieve'
          type: string
      responses:
        200:
          description: 'User object'
          schema:
            $ref: '#/definitions/User'
        404:
          description: 'User not found'
    put:
      summary: 'Update user by ID'
      description: 'Update the details of a specific user by their unique ID.'
      parameters:
        - name: id
          in: path
          required: true
          description: 'The ID of the user to update'
          type: string
        - name: body
          in: body
          description: 'Updated user object'
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        200:
          description: 'User updated successfully'
          schema:
            $ref: '#/definitions/User'
        404:
          description: 'User not found'
    delete:
      summary: 'Delete user by ID'
      description: 'Remove a user from the system by their unique ID.'
      parameters:
        - name: id
          in: path
          required: true
          description: 'The ID of the user to delete'
          type: string
      responses:
        200:
          description: 'User deleted successfully'
        404:
          description: 'User not found'

  /api/generateQR:
    get:
      summary: 'Generate a QR Code'
      description: 'Generate a QR code based on the provided ID.'
      parameters:
        - name: id
          in: query
          required: true
          description: 'The ID to encode into the QR code'
          type: string
      responses:
        200:
          description: 'A QR code image'
          schema:
            type: string
            format: binary
            example: "<img src='data:image/png;base64,...' alt='QR Code'/>"
        400:
          description: 'Invalid request or missing parameter'

definitions:
  User:
    type: 'object'
    properties:
      id:
        type: 'integer'
        example: 1
      name:
        type: 'string'
        example: 'John Doe'
      createdAt:
        type: 'string'
        format: 'date-time'
        example: '2024-09-06T10:20:30Z'
      updatedAt:
        type: 'string'
        format: 'date-time'
        example: '2024-09-06T10:20:30Z'
